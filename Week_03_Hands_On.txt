3-1
    2.  Current working directory: /root
    3.  Pressing 'cd' did not change the current directory because there was no path specified for the command "cd" to go to
    4.  Pressing 'cd .' did not change the current directory because the "." refers to the current directory
    5.  Pressing 'cd ..' changed the curent directory to '/' because the '..' refers to the previous directory in the tree structure
    6.  The directory changed, I am currently in '/root', I specified a relative path because there was no '/' in front of the path to define the start point for an absolute path
    7.  The error message message I got was '-bash: cd etc: No such file or directory' becuase the 'etc' directory is not in the current working directory
    8.  The directory changed because the '/' introduced the absolute path to navigate to
    9.  The current directory changed back to the root level because this is an absolute path to the root directory
    10. The current directory changed to the same path as it would have if you used '/home/user1'
    11. I used the relative path from my current working directory to the Desktop. I am now at '/home/user1/Desktop'
    13. The relitive pathname took me up a level in the tree path and then the 'sysconfig' took me down into the specified directory
    14. The relative path was acceptable, but the absolute path would have been better because it would have been a shorter command to type

3-2
    3.  After pressing Tab the command filled with 'cd root/' because that is the first directory below '/' that the shell found. It contains 1 directory that a starts with 'ro'
    5.  The display did not change when I pressed Tab
    6.  There are 2 directories that begin with 'b'
    7.  The command expanded to cd bin/ because that was the only match in the directory
    8.  There are 2 subdiretories under root that begin with "m"

3-3
    3.  There are a bunch of files in the list.  Some of them have extensions, the most abundant extension i see is a '.d' which is referring to 'directory'
    4.  The display shows the files in the current directory in a vertical list with a "--More--" at the end
    6.  The display shows the files in the current directory in a vertical list with a ":" at the end
    9.  The current working directory is '/root'
    10. This time the ls command gave me the contents of the directory I supplied without changing my current working directory.
    11. There were no files listed with the ls command. these files are hidden because they have the '.' in front.
    12. there are 3 regular files and a directory
    13. There was a large list of files in the '/bin' directory.  They are mostly executable files
    14. There is permissions information and creation date and time information.  The 'll' command is an alias to the 'ls -l' command so it shows the same information.
    15. The etc file is a directory
    16. The inittab is an 'ASCII text'
    17. The information is very explicit and is much more descriptive

3-4
    2.  The file has 2 files
    5.  The top 10 lines of the inittab file are shown
    6.  With the '-5' command shows the first 5 lines and the '-3' shows the first 3
    7.  The last 10 lines of the inittab file are shown
    8.  The 'tail -5' shows the last 5 lines of the file
    9.  The file is an executable type and should not be opened with a text editor

3-5
    3.  Nothing was displayed because we were not in edit mode.  Text entry can be completed in edit mode
    4.  The cursor did not move, and now we are in command mode.  The 'x' key removed the currently underlined letter and i brougt us into the same position between the 't' and the 'e' and the 'h' got inserted before the cursor
    9.  The display reads '"sample1" [New] 12L, 551C written
    12. The file type is 'ASCII text'
    13. The display reads '"sample1" 12L, 551C' which doesnt have the 'New' flag or the 'written' command from the save option
    15. The date time stamp was placed at the bottom of the file because the r command appends the file where the cursor is currently placed
    16. The 'yy' does a copy not a cut and the 'P' command pastes above the current lines
    19. The 'w' command saved a copy when you gave it a new file name to use
    20. I was not able to quit because there were unsaved changes to the document that hadn't been saved
    26. I was unable to get the 'l,$ s/to/To/g' to function, so I used '%s/to/To/g'
    27. The changes were undone
    33. the word 'flies' was replaced with 'flies and bears'

3-6
    2.  3 files exist with the word 'sample'
    3.  all files are shown because of the wild card '*'
    4.  'No such file or directory' is shown because there is no exact match
    5.  'sample1 sample2 sample3' is shown because of the single character wildcard '?' is used
    6.  'No such file or directory' is shown because there is no file that is that length with 'sample' and then 2 more characters as wildcards
    7.  'sample1 sample3' is shown becasue the [] allow you to specifiy the characters you are looking for
    8.  'sample2' is shown because the '!' characeter acts as an inverse function and shows you the opposite
    9.  'sample1 sample2 sample3' is shown because the '-' denotes a range
    10. 'No such file or directory' is shown because it found no match for the inverse selection

3-7
    2.  two lines that contained "Inn" were shown because grep by default returns the lines where the searched item is found
    3.  the entire file was shown because it contained the word "Inn"
    4.  Nothing was returned because case sensitivity
    5.  This returned the same as the first command because the '-i' made it case insensitive
    6.  All of the capital "I"s were returned even the ones in front of the word Inn because that was all it was searching for
    7.  All the instances of I that were standing alone with spaces on either side were returned
    8.  Instances of the word "the" were returned becasue the '.' is a single character wildcards
    9.  All instances of words starting with 'w' and ending with 'e' with up to 3 characters inbetween showed up becasue the '.' wildcard is 0-1 character each
    10. Nothing is displayed becasue the '^' symbol refers to the begining of the line and you cant have space in front of the begining of the line
    11. It showed the lines that began with the letter "I"
    12. Nothing is shown because the standard grep doesn't use the () as a command to search
    13. It returned all instances of 'we' and of 'next' becasue the (|) acts as an 'OR' operator
    14. It returned the lines where the word 'Inn' was at the end of the line because the character '$' represents the end of the line when using grep
    15. It returned the lines with a question mark at the end for the same reason above
    16. This command returns any blank lines in the file.  It looks for the begining of a line immediately followed by the end of the line

Discovery Exersise 6
    I ran the 'yum update vim-minimal' and it installed version 2:7.4.475-2.fc20
    The 'yum install vim' installed 'vim-enhanced' and 3 dependancies: gpm-libs, vim-common, and vim-filesystem
    I walked through the vim toutorial and visited www.vim.org